{
  "fraud_detection": {
    "data": {
      "transactions": {
        "path": "s3a://igniteflow-data/transactions/",
        "format": "parquet",
        "schema": "transactions_schema"
      },
      "customers": {
        "path": "s3a://igniteflow-data/customers/",
        "format": "parquet",
        "schema": "customers_schema"
      }
    },
    "model": {
      "name": "fraud_detection_model",
      "version": "1.0.0",
      "target_column": "is_fraud",
      "feature_columns": [
        "amount",
        "merchant_category",
        "hour_of_day",
        "day_of_week",
        "is_weekend",
        "tx_amount_7d_avg",
        "tx_amount_7d_std",
        "tx_count_24h",
        "tx_count_1h",
        "tx_amount_24h_sum",
        "tx_amount_zscore",
        "customer_avg_amount",
        "days_since_first_tx",
        "merchant_fraud_rate",
        "merchant_tx_count"
      ],
      "categorical_columns": [
        "merchant_category",
        "payment_method",
        "transaction_type",
        "amount_category"
      ],
      "output_path": "s3a://igniteflow-models/fraud-detection/",
      "min_interactions": 5
    },
    "training": {
      "test_size": 0.2,
      "random_state": 42,
      "cross_validation_folds": 3,
      "hyperparameter_tuning": {
        "max_depth": [4, 5, 6],
        "max_iter": [50, 100, 150],
        "step_size": [0.05, 0.1, 0.15]
      }
    }
  },
  "mlflow": {
    "enabled": true,
    "tracking_uri": "http://mlflow:5000",
    "experiment_name": "fraud_detection_experiments",
    "registry_uri": "s3://mlflow-artifacts"
  },
  "data_quality": {
    "enabled": true,
    "fail_on_error": false,
    "schemas": {
      "transactions_schema": {
        "columns": [
          "transaction_id",
          "customer_id",
          "merchant_id",
          "amount",
          "timestamp",
          "merchant_category",
          "payment_method",
          "is_fraud"
        ]
      },
      "customers_schema": {
        "columns": [
          "customer_id",
          "age",
          "income",
          "credit_score",
          "account_age_days"
        ]
      }
    },
    "rules": [
      {
        "name": "transaction_completeness",
        "type": "completeness",
        "columns": ["transaction_id", "customer_id", "amount", "timestamp"],
        "threshold": 0.95
      },
      {
        "name": "customer_completeness",
        "type": "completeness",
        "columns": ["customer_id", "age", "credit_score"],
        "threshold": 0.90
      },
      {
        "name": "transaction_uniqueness",
        "type": "uniqueness",
        "columns": ["transaction_id"],
        "threshold": 0.99
      },
      {
        "name": "data_freshness",
        "type": "freshness",
        "columns": ["timestamp"],
        "threshold": 24.0
      }
    ],
    "ranges": {
      "amount_range": {
        "min": 0.01,
        "max": 100000.0
      },
      "age_range": {
        "min": 18,
        "max": 120
      }
    }
  }
}